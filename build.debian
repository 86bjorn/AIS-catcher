#!/bin/bash
set -e

# Check if the architecture and version are provided as input
if [ $# -ne 2 ]; then
  echo "Usage: $0 <architecture> <version>"
  exit 1
fi

architecture=$1
version=$2

# Update package list and install necessary tools
apt-get update
apt-get install -y build-essential pkg-config libfftw3-dev librtlsdr-dev libusb-1.0-0-dev

# Compile the application
make rtl-only

# Set up the directory structure for the Debian package
package_name="ais-catcher_${version}_${architecture}"
mkdir -p "$package_name/DEBIAN"
mkdir -p "$package_name/usr/local/bin"
mkdir -p "$package_name/usr/share/doc/ais-catcher"
mkdir -p "$package_name/etc/ais-catcher"

# Copy the compiled binary
make rtl-only
cp AIS-catcher "$package_name/usr/local/bin/"

# Create the control file
cat <<EOF > "$package_name/DEBIAN/control"
Package: ais-catcher
Version: $version
Section: utils
Priority: optional
Architecture: $architecture
Depends: librtlsdr0, libusb-1.0-0
Maintainer: Your Name <you@example.com>
Description: AIS-catcher is a utility for decoding Automatic Identification System (AIS) messages
EOF

# Create the config.json file
cat <<EOF > "$package_name/etc/ais-catcher/config.json"
{ "config": "aiscatcher", "version": 1 }
EOF

# Set the desired username
username="ais_catcher_user"

# Create the post-install script
cat <<EOF > "$package_name/DEBIAN/postinst"
#!/bin/bash
set -e

# Create the user if it doesn't exist
if ! id -u $username >/dev/null 2>&1; then
  useradd -m -s /bin/bash $username
fi

# Enable and start the AIS-catcher service for the user
sudo -u $username systemctl --user enable ais-catcher.service
sudo -u $username systemctl --user start ais-catcher.service
EOF

# Make the post-install script executable
chmod +x "$package_name/DEBIAN/postinst"

# Create the systemd service file for the user
mkdir -p "$package_name/etc/systemd/user"
cat <<EOF > "$package_name/etc/systemd/user/ais-catcher.service"
[Unit]
Description=AIS-catcher service
After=network.target

[Service]
ExecStart=/usr/local/bin/AIS-catcher -C /etc/ais-catcher/config.json
Restart=always
RestartSec=10

[Install]
WantedBy=default.target
EOF

# Build the Debian package
dpkg-deb --build "$package_name"
